mailu:
  mailuVersion: 1.9
  hostnames:
    - mail.ws.sh4ke.rocks

  domain: ws.sh4ke.rocks

  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/hostname
            operator: NotIn
            values:
            - k3s-server-1
    podAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - mailu
        topologyKey: kubernetes.io/hostname

  secretKey: <path:kv/data/k3s/argocd/mailu#secret_key>

  initialAccount:
    username: admin
    domain: ws.sh4ke.rocks
    password: <path:kv/data/k3s/argocd/mailu#initial_admin_password>

  database:
    type: mysql
    roundcubeType: mysql

    mysql:
      rootPassword: <path:kv/data/k3s/argocd/mailu#mysql_root_password>

      database: mailu
      user: mailu
      password: <path:kv/data/k3s/argocd/mailu#mysql_password>

      roundcubeDatabase: roundcube
      roundcubeUser: roundcube
      roundcubePassword: <path:kv/data/k3s/argocd/mailu#roundcube_password>

  certmanager:
    issuerName: letsencrypt-prod

  ingress:
    tlsFlavor: cert
    annotations:
      kubernetes.io/ingress.class: "nginx"

  front:
    hostPort:
      enabled: false

    externalService:
      enabled: true
      type: LoadBalancer
      loadBalancerIP: 31.172.117.49

  persistence:
    single_pvc: true
    size: 10Gi
    accessMode: ReadWriteOnce
    storageClass: "csi-cinder-sc-delete-all-zones"

  postfix:
    image:
      repository: sh4ke/mailu-postfix

  rspamd:
    resources:
      limits:
        memory: 500Mi

  webdav:
    enabled: true

backup-mysql:
  schedule: "11 4 * * *"
  image: docker.io/library/mariadb:10.4.10
  shellCommand: |
    mysqldump -u ${MYSQL_USER} -p${MYSQL_PASSWORD} -h mailu-mysql ${MYSQL_DATABASE} > /backup/mailu_dump.$(date +"%d-%m-%Y-%H-%M").sql
    cd /backup
    ls -tr mailu_dump.* | head -n -7 | xargs -r rm -f
  env:
    - name: MYSQL_DATABASE
      value: mailu
    - name: MYSQL_USER
      value: mailu
    - name: MYSQL_PASSWORD
      value: <path:kv/data/k3s/argocd/mailu#mysql_password>
  volumeMounts:
    - mountPath: /backup
      name: mailu-backup
      subPath: mysql
  volumes:
    - name: mailu-backup
      persistentVolumeClaim:
        claimName: mailu-backup
  matchExpressions:
    - key: component
      operator: In
      values:
        - mysql
  permissions:
    dirs: /backup
    owner: "999"
    group: "999"

backup-admin:
  schedule: "10 4 * * *"
  image: alpine:latest
  shellCommand: |
    cd /backup
    tar czf /backup/mailu_admin_data.$(date +"%d-%m-%Y-%H-%M").tar.gz /data
    ls -tr mailu_admin_data.* | head -n -7 | xargs -r rm -f
    tar czf /backup/mailu_admin_dkim.$(date +"%d-%m-%Y-%H-%M").tar.gz /dkim
    ls -tr mailu_admin_dkim.* | head -n -7 | xargs -r rm -f
  volumeMounts:
    - mountPath: /data
      name: data
      subPath: admin
    - mountPath: /dkim
      name: data
      subPath: dkim
    - mountPath: /backup
      name: mailu-backup
      subPath: admin
  volumes:
    - name: data
      persistentVolumeClaim:
        claimName: mailu-storage
    - name: mailu-backup
      persistentVolumeClaim:
        claimName: mailu-backup
  matchExpressions:
    - key: component
      operator: In
      values:
        - admin
