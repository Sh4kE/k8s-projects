#
# IMPORTANT NOTE
#
# This chart inherits from our common library chart. You can check the default values/options here:
# https://github.com/k8s-at-home/library-charts/tree/main/charts/stable/common/values.yaml
#
paperless:
  image:
    tag: 1.9.2
  common:
    controller:
      annotations:
        avp.kubernetes.io/path: "kv/data/k3s/argocd/paperless"
    global:
      annotations:
        avp.kubernetes.io/path: "kv/data/k3s/argocd/paperless"
    secret:
      PAPERLESS_DBNAME: <dbname>
      PAPERLESS_DBUSER: <dbusername>
      PAPERLESS_DBPASS: <dbpassword>
      PAPERLESS_SECRET_KEY: <secretKey>
      PAPERLESS_ADMIN_USER: <paperlessAdminUser>
      PAPERLESS_ADMIN_PASSWORD: <paperlessAdminPassword>

  # -- See the following files for additional environment variables:
  # https://github.com/jonaswinkler/paperless-ng/tree/master/docker/compose/
  # https://github.com/jonaswinkler/paperless-ng/blob/master/paperless.conf.example
  # @default -- See below
  env:
    # -- Project name
    COMPOSE_PROJECT_NAME: paperless
    # -- Redis to use
    PAPERLESS_REDIS: redis://paperless-ng-redis-master:6379
    # -- OCR languages to install
    PAPERLESS_OCR_LANGUAGE: deu
    PAPERLESS_OCR_LANGUAGES: "deu eng"
    # USERMAP_UID: 1000
    # USERMAP_GID: 1000
    PAPERLESS_TIME_ZONE: Europe/Berlin
    # -- Database
    PAPERLESS_DBHOST: paperless-ng-postgresql
    # Tika + Gotenberg
    PAPERLESS_TIKA_ENABLED: 1
    PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://paperless-ng-gotenberg:3000
    PAPERLESS_TIKA_ENDPOINT: http://paperless-ng-tika:9998

    # Handling inotify not working on NFS
    # PAPERLESS_CONSUMER_POLLING: 30
    PAPERLESS_CONSUMER_RECURSIVE: 1

    PAPERLESS_ENABLE_UPDATE_CHECK: true
    PAPERLESS_URL: https://paperless.k3s.sh4ke.rocks

    PAPERLESS_ADMIN_MAIL: "michael.wittig@posteo.de"
  redis:
    enabled: true
    master:
      persistence:
        enabled: false
    replica:
      replicaCount: 0
      persistence:
        enabled: false

  persistence:
    data-backup:
      enabled: true
      existingClaim: paperless-ng-data-backup
    consume-nfs:
      enabled: true
      existingClaim: paperless-ng-consume-nfs

  additionalContainers: 
  - env:
    - name: COMPOSE_PROJECT_NAME
      value: paperless
    - name: PAPERLESS_ADMIN_MAIL
      value: michael.wittig@posteo.de
    - name: PAPERLESS_CONSUMER_RECURSIVE
      value: "1"
    - name: PAPERLESS_DBHOST
      value: paperless-ng-postgresql
    - name: PAPERLESS_ENABLE_UPDATE_CHECK
      value: "true"
    - name: PAPERLESS_OCR_LANGUAGE
      value: deu
    - name: PAPERLESS_OCR_LANGUAGES
      value: deu eng
    - name: PAPERLESS_PORT
      value: "8000"
    - name: PAPERLESS_REDIS
      value: redis://paperless-ng-redis-master:6379
    - name: PAPERLESS_TIKA_ENABLED
      value: "1"
    - name: PAPERLESS_TIKA_ENDPOINT
      value: http://paperless-ng-tika:9998
    - name: PAPERLESS_TIKA_GOTENBERG_ENDPOINT
      value: http://paperless-ng-gotenberg:3000
    - name: PAPERLESS_TIME_ZONE
      value: Europe/Berlin
    - name: PAPERLESS_URL
      value: https://paperless.ws.sh4ke.rocks
    envFrom:
    - secretRef:
        name: paperless-ng
    image: ghcr.io/paperless-ngx/paperless-ngx:1.9.2
    command: ["/bin/sh"]
    args: ["-c", "while true; do document_exporter /usr/src/paperless/data-backup; sleep 86400;done"]
    imagePullPolicy: IfNotPresent
    name: paperless-ng-backup
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /usr/src/paperless/data-backup
      name: data-backup
    - mountPath: /usr/src/paperless/data
      name: data
    - mountPath: /usr/src/paperless/consume
      name: consume
    - mountPath: /usr/src/paperless/export
      name: export
    - mountPath: /usr/src/paperless/media
      name: media
  - image: eeacms/rsync:2.4
    command: ["/bin/sh"]
    args: ["-c", "while true; do sleep 86400;done"]
    imagePullPolicy: IfNotPresent
    name: paperless-ng-consume-nfs
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /usr/src/paperless/consume
      name: consume
    - mountPath: /usr/src/paperless/consume-nfs
      name: consume-nfs

  postgresql:
    enabled: true
    commonAnnotations:
      avp.kubernetes.io/path: "kv/data/k3s/argocd/paperless"

    image:
      tag: 13

    auth:
      postgresPassword: "<postgresPassword>"
      username: "<dbusername>"
      password: "<dbpassword>"
      database: "<dbname>"
      replicationPassword: "<replicationPassword>"

    primary:
      # pgHbaConfiguration: |
      #   host    all      paperless    127.0.0.1/32     trust
      #   host    all      paperless    ::1/128          trust
      persistence:
        enabled: true
        accessModes:
          - ReadWriteOnce

      startupProbe:
        enabled: true
        failureThreshold: 30
        periodSeconds: 10

backup:
  securityContext:
    runAsUser: 1000
  schedule: "0 4 * * *"
  shellCommand: document_exporter /usr/src/paperless/data-backup
  env:
    - name: COMPOSE_PROJECT_NAME
      value: paperless
    - name: PAPERLESS_ADMIN_MAIL
      value: michael.wittig@posteo.de
    - name: PAPERLESS_CONSUMER_RECURSIVE
      value: "1"
    - name: PAPERLESS_DBHOST
      value: paperless-ng-postgresql
    - name: PAPERLESS_ENABLE_UPDATE_CHECK
      value: "true"
    - name: PAPERLESS_OCR_LANGUAGE
      value: deu
    - name: PAPERLESS_OCR_LANGUAGES
      value: deu eng
    - name: PAPERLESS_PORT
      value: "8000"
    - name: PAPERLESS_REDIS
      value: redis://paperless-ng-redis-master:6379
    - name: PAPERLESS_TIKA_ENABLED
      value: "1"
    - name: PAPERLESS_TIKA_ENDPOINT
      value: http://paperless-ng-tika:9998
    - name: PAPERLESS_TIKA_GOTENBERG_ENDPOINT
      value: http://paperless-ng-gotenberg:3000
    - name: PAPERLESS_TIME_ZONE
      value: Europe/Berlin
    - name: PAPERLESS_URL
      value: https://paperless.ws.sh4ke.rocks
  envFrom:
    - secretRef:
        name: paperless-ng
  volumes:
    - name: consume
      persistentVolumeClaim:
        claimName: paperless-ng-consume
    - name: data
      persistentVolumeClaim:
        claimName: paperless-ng-data
    - name: data-backup
      persistentVolumeClaim:
        claimName: paperless-ng-data-backup
    - name: export
      persistentVolumeClaim:
        claimName: paperless-ng-export
    - name: media
      persistentVolumeClaim:
        claimName: paperless-ng-media
  volumeMounts:
    - mountPath: /usr/src/paperless/data-backup
      name: data-backup
    - mountPath: /usr/src/paperless/data
      name: data
    - mountPath: /usr/src/paperless/consume
      name: consume
    - mountPath: /usr/src/paperless/export
      name: export
    - mountPath: /usr/src/paperless/media
      name: media
  permissions:
    dirs: /usr/src/paperless/data-backup
    owner: "1000"
    group: "1000"
  matchExpressions:
    - key: app.kubernetes.io/name
      operator: In
      values:
        - paperless
  image: ghcr.io/paperless-ngx/paperless-ngx:1.9.2
