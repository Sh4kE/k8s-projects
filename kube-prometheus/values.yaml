kube-prometheus-stack:
  alertmanager:
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-prod"

    config:
      route:
        group_by: ['namespace']
        group_wait: 30s
        group_interval: 5m
        repeat_interval: 12h
        receiver: 'telegram'
        routes:
        - receiver: 'telegram'
          matchers:
            - alertname !~ "InfoInhibitor|Watchdog"
        - receiver: 'null'
          matchers:
            - alertname =~ "InfoInhibitor|Watchdog"

    alertmanagerSpec:
      storage:
        volumeClaimTemplate:
          spec:
            storageClassName: csi-cinder-sc-delete-all-zones
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 2Gi

  grafana:
    defaultDashboardsTimezone: "Europe/Berlin"
    adminPassword: <path:kv/data/k3s/argocd/kube-prometheus#grafanaAdminPassword>
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-prod"

  prometheus:
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-prod"
    prometheusSpec:
      storage:
        volumeClaimTemplate:
          spec:
            storageClassName: csi-cinder-sc-delete-all-zones
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 2Gi
      serviceMonitorSelectorNilUsesHelmValues: false
      podMonitorSelectorNilUsesHelmValues: false
      ruleSelectorNilUsesHelmValues: false
      probeSelectorNilUsesHelmValues: false

  kubeControllerManager:
    enabled: false
  kubeProxy:
    enabled: false
  kubeScheduler:
    enabled: false
